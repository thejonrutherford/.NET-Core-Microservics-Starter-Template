//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleDto", Namespace="http://schemas.datacontract.org/2004/07/Articles.ReadSide.WCF.Service.DTO")]
    public partial class ArticleDto : object
    {
        
        private string AbstractField;
        
        private string AddedByField;
        
        private System.DateTime AddedDateField;
        
        private bool ApprovedField;
        
        private string BodyField;
        
        private string CategoryIdField;
        
        private string CityField;
        
        private ServiceReference1.CommentDto[] CommentsField;
        
        private bool CommentsEnabledField;
        
        private string CountryField;
        
        private System.DateTime ExpireDateField;
        
        private string IdField;
        
        private bool ListedField;
        
        private bool OnlyForMembersField;
        
        private System.DateTime ReleaseDateField;
        
        private string StateField;
        
        private string TitleField;
        
        private int TotalRatingField;
        
        private int ViewCountField;
        
        private int VotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract
        {
            get
            {
                return this.AbstractField;
            }
            set
            {
                this.AbstractField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedBy
        {
            get
            {
                return this.AddedByField;
            }
            set
            {
                this.AddedByField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate
        {
            get
            {
                return this.AddedDateField;
            }
            set
            {
                this.AddedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved
        {
            get
            {
                return this.ApprovedField;
            }
            set
            {
                this.ApprovedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body
        {
            get
            {
                return this.BodyField;
            }
            set
            {
                this.BodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryId
        {
            get
            {
                return this.CategoryIdField;
            }
            set
            {
                this.CategoryIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.CommentDto[] Comments
        {
            get
            {
                return this.CommentsField;
            }
            set
            {
                this.CommentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommentsEnabled
        {
            get
            {
                return this.CommentsEnabledField;
            }
            set
            {
                this.CommentsEnabledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate
        {
            get
            {
                return this.ExpireDateField;
            }
            set
            {
                this.ExpireDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Listed
        {
            get
            {
                return this.ListedField;
            }
            set
            {
                this.ListedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlyForMembers
        {
            get
            {
                return this.OnlyForMembersField;
            }
            set
            {
                this.OnlyForMembersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate
        {
            get
            {
                return this.ReleaseDateField;
            }
            set
            {
                this.ReleaseDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRating
        {
            get
            {
                return this.TotalRatingField;
            }
            set
            {
                this.TotalRatingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewCount
        {
            get
            {
                return this.ViewCountField;
            }
            set
            {
                this.ViewCountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Votes
        {
            get
            {
                return this.VotesField;
            }
            set
            {
                this.VotesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentDto", Namespace="http://schemas.datacontract.org/2004/07/Articles.ReadSide.WCF.Service.DTO")]
    public partial class CommentDto : object
    {
        
        private string AddedByField;
        
        private string AddedByEmailField;
        
        private string AddedByIpField;
        
        private System.DateTime AddedDateField;
        
        private string ArticleIdField;
        
        private string BodyField;
        
        private string IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedBy
        {
            get
            {
                return this.AddedByField;
            }
            set
            {
                this.AddedByField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedByEmail
        {
            get
            {
                return this.AddedByEmailField;
            }
            set
            {
                this.AddedByEmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedByIp
        {
            get
            {
                return this.AddedByIpField;
            }
            set
            {
                this.AddedByIpField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate
        {
            get
            {
                return this.AddedDateField;
            }
            set
            {
                this.AddedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleId
        {
            get
            {
                return this.ArticleIdField;
            }
            set
            {
                this.ArticleIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body
        {
            get
            {
                return this.BodyField;
            }
            set
            {
                this.BodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDto", Namespace="http://schemas.datacontract.org/2004/07/Articles.ReadSide.WCF.Service.DTO")]
    public partial class CategoryDto : object
    {
        
        private string AddedByField;
        
        private System.DateTime AddedDateField;
        
        private ServiceReference1.ArticleDto[] ArticlesField;
        
        private string DescriptionField;
        
        private string IdField;
        
        private string ImageUrlField;
        
        private int ImportanceField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedBy
        {
            get
            {
                return this.AddedByField;
            }
            set
            {
                this.AddedByField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate
        {
            get
            {
                return this.AddedDateField;
            }
            set
            {
                this.AddedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.ArticleDto[] Articles
        {
            get
            {
                return this.ArticlesField;
            }
            set
            {
                this.ArticlesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl
        {
            get
            {
                return this.ImageUrlField;
            }
            set
            {
                this.ImageUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Importance
        {
            get
            {
                return this.ImportanceField;
            }
            set
            {
                this.ImportanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IArticlesService")]
    public interface IArticlesService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetArticleBody", ReplyAction="http://tempuri.org/IArticlesService/GetArticleBodyResponse")]
        System.Threading.Tasks.Task<string> GetArticleBodyAsync(string categoryId, string articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetArticleCount", ReplyAction="http://tempuri.org/IArticlesService/GetArticleCountResponse")]
        System.Threading.Tasks.Task<int> GetArticleCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetArticleCountByCategoryId", ReplyAction="http://tempuri.org/IArticlesService/GetArticleCountByCategoryIdResponse")]
        System.Threading.Tasks.Task<int> GetArticleCountByCategoryIdAsync(System.Guid categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCommentCountByArticleId", ReplyAction="http://tempuri.org/IArticlesService/GetCommentCountByArticleIdResponse")]
        System.Threading.Tasks.Task<int> GetCommentCountByArticleIdAsync(System.Guid articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCommentCount", ReplyAction="http://tempuri.org/IArticlesService/GetCommentCountResponse")]
        System.Threading.Tasks.Task<int> GetCommentCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetPublishedArticleCount", ReplyAction="http://tempuri.org/IArticlesService/GetPublishedArticleCountResponse")]
        System.Threading.Tasks.Task<int> GetPublishedArticleCountAsync(System.DateTime currentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetPublishedArticleCountByCategoryId", ReplyAction="http://tempuri.org/IArticlesService/GetPublishedArticleCountByCategoryIdResponse")]
        System.Threading.Tasks.Task<int> GetPublishedArticleCountByCategoryIdAsync(System.Guid categoryId, System.DateTime currentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetArticleById", ReplyAction="http://tempuri.org/IArticlesService/GetArticleByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ArticleDto> GetArticleByIdAsync(System.Guid articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetArticles", ReplyAction="http://tempuri.org/IArticlesService/GetArticlesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetArticlesAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetArticlesByCategoryId", ReplyAction="http://tempuri.org/IArticlesService/GetArticlesByCategoryIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetArticlesByCategoryIdAsync(System.Guid categoryId, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCategories", ReplyAction="http://tempuri.org/IArticlesService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CategoryDto[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCategoriesByIndex", ReplyAction="http://tempuri.org/IArticlesService/GetCategoriesByIndexResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CategoryDto[]> GetCategoriesByIndexAsync(int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCategoryById", ReplyAction="http://tempuri.org/IArticlesService/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CategoryDto> GetCategoryByIdAsync(System.Guid categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCommentById", ReplyAction="http://tempuri.org/IArticlesService/GetCommentByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CommentDto> GetCommentByIdAsync(System.Guid commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetComments", ReplyAction="http://tempuri.org/IArticlesService/GetCommentsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CommentDto[]> GetCommentsAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetCommentsByArticleId", ReplyAction="http://tempuri.org/IArticlesService/GetCommentsByArticleIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CommentDto[]> GetCommentsByArticleIdAsync(System.Guid articleId, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetPublishedArticles", ReplyAction="http://tempuri.org/IArticlesService/GetPublishedArticlesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetPublishedArticlesAsync(System.DateTime currentDate, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticlesService/GetPublishedArticlesByCategoryId", ReplyAction="http://tempuri.org/IArticlesService/GetPublishedArticlesByCategoryIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetPublishedArticlesByCategoryIdAsync(System.Guid categoryId, System.DateTime currentDate, int pageIndex, int pageSize);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IArticlesServiceChannel : ServiceReference1.IArticlesService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class ArticlesServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IArticlesService>, ServiceReference1.IArticlesService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ArticlesServiceClient() : 
                base(ArticlesServiceClient.GetDefaultBinding(), ArticlesServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IArticlesService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArticlesServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ArticlesServiceClient.GetBindingForEndpoint(endpointConfiguration), ArticlesServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArticlesServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ArticlesServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArticlesServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ArticlesServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArticlesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetArticleBodyAsync(string categoryId, string articleId)
        {
            return base.Channel.GetArticleBodyAsync(categoryId, articleId);
        }
        
        public System.Threading.Tasks.Task<int> GetArticleCountAsync()
        {
            return base.Channel.GetArticleCountAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetArticleCountByCategoryIdAsync(System.Guid categoryId)
        {
            return base.Channel.GetArticleCountByCategoryIdAsync(categoryId);
        }
        
        public System.Threading.Tasks.Task<int> GetCommentCountByArticleIdAsync(System.Guid articleId)
        {
            return base.Channel.GetCommentCountByArticleIdAsync(articleId);
        }
        
        public System.Threading.Tasks.Task<int> GetCommentCountAsync()
        {
            return base.Channel.GetCommentCountAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetPublishedArticleCountAsync(System.DateTime currentDate)
        {
            return base.Channel.GetPublishedArticleCountAsync(currentDate);
        }
        
        public System.Threading.Tasks.Task<int> GetPublishedArticleCountByCategoryIdAsync(System.Guid categoryId, System.DateTime currentDate)
        {
            return base.Channel.GetPublishedArticleCountByCategoryIdAsync(categoryId, currentDate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArticleDto> GetArticleByIdAsync(System.Guid articleId)
        {
            return base.Channel.GetArticleByIdAsync(articleId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetArticlesAsync(int pageIndex, int pageSize)
        {
            return base.Channel.GetArticlesAsync(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetArticlesByCategoryIdAsync(System.Guid categoryId, int pageIndex, int pageSize)
        {
            return base.Channel.GetArticlesByCategoryIdAsync(categoryId, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CategoryDto[]> GetCategoriesAsync()
        {
            return base.Channel.GetCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CategoryDto[]> GetCategoriesByIndexAsync(int pageSize, int pageIndex)
        {
            return base.Channel.GetCategoriesByIndexAsync(pageSize, pageIndex);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CategoryDto> GetCategoryByIdAsync(System.Guid categoryId)
        {
            return base.Channel.GetCategoryByIdAsync(categoryId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CommentDto> GetCommentByIdAsync(System.Guid commentId)
        {
            return base.Channel.GetCommentByIdAsync(commentId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CommentDto[]> GetCommentsAsync(int pageIndex, int pageSize)
        {
            return base.Channel.GetCommentsAsync(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CommentDto[]> GetCommentsByArticleIdAsync(System.Guid articleId, int pageIndex, int pageSize)
        {
            return base.Channel.GetCommentsByArticleIdAsync(articleId, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetPublishedArticlesAsync(System.DateTime currentDate, int pageIndex, int pageSize)
        {
            return base.Channel.GetPublishedArticlesAsync(currentDate, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArticleDto[]> GetPublishedArticlesByCategoryIdAsync(System.Guid categoryId, System.DateTime currentDate, int pageIndex, int pageSize)
        {
            return base.Channel.GetPublishedArticlesByCategoryIdAsync(categoryId, currentDate, pageIndex, pageSize);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IArticlesService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IArticlesService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:55435/ArticlesService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ArticlesServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IArticlesService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ArticlesServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IArticlesService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IArticlesService,
        }
    }
}
